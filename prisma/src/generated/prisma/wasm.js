
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.Playing_with_neonScalarFieldEnum = {
  id: 'id',
  name: 'name',
  value: 'value'
};

exports.Prisma.State_dataScalarFieldEnum = {
  id: 'id',
  fin_year: 'fin_year',
  month: 'month',
  state_code: 'state_code',
  state_name: 'state_name',
  district_code: 'district_code',
  district_name: 'district_name',
  Approved_Labour_Budget: 'Approved_Labour_Budget',
  Average_Wage_rate_per_day_per_person: 'Average_Wage_rate_per_day_per_person',
  Average_days_of_employment_provided_per_Household: 'Average_days_of_employment_provided_per_Household',
  Differently_abled_persons_worked: 'Differently_abled_persons_worked',
  Material_and_skilled_Wages: 'Material_and_skilled_Wages',
  Number_of_Completed_Works: 'Number_of_Completed_Works',
  Number_of_GPs_with_NIL_exp: 'Number_of_GPs_with_NIL_exp',
  Number_of_Ongoing_Works: 'Number_of_Ongoing_Works',
  Persondays_of_Central_Liability_so_far: 'Persondays_of_Central_Liability_so_far',
  SC_persondays: 'SC_persondays',
  SC_workers_against_active_workers: 'SC_workers_against_active_workers',
  ST_persondays: 'ST_persondays',
  ST_workers_against_active_workers: 'ST_workers_against_active_workers',
  Total_Adm_Expenditure: 'Total_Adm_Expenditure',
  Total_Exp: 'Total_Exp',
  Total_Households_Worked: 'Total_Households_Worked',
  Total_Individuals_Worked: 'Total_Individuals_Worked',
  Total_No_of_Active_Job_Cards: 'Total_No_of_Active_Job_Cards',
  Total_No_of_Active_Workers: 'Total_No_of_Active_Workers',
  Total_No_of_HHs_completed_100_Days_of_Wage_Employment: 'Total_No_of_HHs_completed_100_Days_of_Wage_Employment',
  Total_No_of_JobCards_issued: 'Total_No_of_JobCards_issued',
  Total_No_of_Workers: 'Total_No_of_Workers',
  Total_No_of_Works_Takenup: 'Total_No_of_Works_Takenup',
  Wages: 'Wages',
  Women_Persondays: 'Women_Persondays',
  percent_of_Category_B_Works: 'percent_of_Category_B_Works',
  percent_of_Expenditure_on_Agriculture_Allied_Works: 'percent_of_Expenditure_on_Agriculture_Allied_Works',
  percent_of_NRM_Expenditure: 'percent_of_NRM_Expenditure',
  percentage_payments_gererated_within_15_days: 'percentage_payments_gererated_within_15_days',
  Remarks: 'Remarks'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  playing_with_neon: 'playing_with_neon',
  state_data: 'state_data'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\rampe\\Projects\\bfbf\\backend\\prisma\\src\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\rampe\\Projects\\bfbf\\backend\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../../.env"
  },
  "relativePath": "../../..",
  "clientVersion": "6.18.0",
  "engineVersion": "34b5a692b7bd79939a9a2c3ef97d816e749cda2f",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "datasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"./src/generated/prisma\"\n}\n\nmodel playing_with_neon {\n  id    Int    @id @default(autoincrement())\n  name  String\n  value Float\n}\n\nmodel state_data {\n  id                                                    Int      @id @default(autoincrement())\n  fin_year                                              String?  @db.VarChar(10)\n  month                                                 String?  @db.VarChar(20)\n  state_code                                            Int?\n  state_name                                            String?\n  district_code                                         Int?\n  district_name                                         String?\n  Approved_Labour_Budget                                BigInt?\n  Average_Wage_rate_per_day_per_person                  Decimal? @db.Decimal(18, 6)\n  Average_days_of_employment_provided_per_Household     Int?\n  Differently_abled_persons_worked                      Int?\n  Material_and_skilled_Wages                            Decimal? @db.Decimal(18, 6)\n  Number_of_Completed_Works                             Int?\n  Number_of_GPs_with_NIL_exp                            Int?\n  Number_of_Ongoing_Works                               Int?\n  Persondays_of_Central_Liability_so_far                BigInt?\n  SC_persondays                                         BigInt?\n  SC_workers_against_active_workers                     Int?\n  ST_persondays                                         BigInt?\n  ST_workers_against_active_workers                     Int?\n  Total_Adm_Expenditure                                 Decimal? @db.Decimal(18, 6)\n  Total_Exp                                             Decimal? @db.Decimal(18, 6)\n  Total_Households_Worked                               Int?\n  Total_Individuals_Worked                              Int?\n  Total_No_of_Active_Job_Cards                          Int?\n  Total_No_of_Active_Workers                            Int?\n  Total_No_of_HHs_completed_100_Days_of_Wage_Employment Int?\n  Total_No_of_JobCards_issued                           Int?\n  Total_No_of_Workers                                   Int?\n  Total_No_of_Works_Takenup                             Int?\n  Wages                                                 Decimal? @db.Decimal(18, 6)\n  Women_Persondays                                      BigInt?\n  percent_of_Category_B_Works                           Decimal? @db.Decimal(5, 2)\n  percent_of_Expenditure_on_Agriculture_Allied_Works    Decimal? @db.Decimal(5, 2)\n  percent_of_NRM_Expenditure                            Decimal? @db.Decimal(5, 2)\n  percentage_payments_gererated_within_15_days          Decimal? @db.Decimal(5, 2)\n  Remarks                                               String?\n}\n",
  "inlineSchemaHash": "76d46110c469e69c7e1cb3ac77f477a3a2e169c8a42f5e55cbf76764ad1a5fc4",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"playing_with_neon\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"Float\"}],\"dbName\":null},\"state_data\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"fin_year\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"month\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state_code\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"state_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"district_code\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"district_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Approved_Labour_Budget\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"Average_Wage_rate_per_day_per_person\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"Average_days_of_employment_provided_per_Household\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Differently_abled_persons_worked\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Material_and_skilled_Wages\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"Number_of_Completed_Works\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Number_of_GPs_with_NIL_exp\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Number_of_Ongoing_Works\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Persondays_of_Central_Liability_so_far\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"SC_persondays\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"SC_workers_against_active_workers\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ST_persondays\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"ST_workers_against_active_workers\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Total_Adm_Expenditure\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"Total_Exp\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"Total_Households_Worked\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Total_Individuals_Worked\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Total_No_of_Active_Job_Cards\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Total_No_of_Active_Workers\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Total_No_of_HHs_completed_100_Days_of_Wage_Employment\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Total_No_of_JobCards_issued\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Total_No_of_Workers\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Total_No_of_Works_Takenup\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Wages\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"Women_Persondays\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"percent_of_Category_B_Works\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"percent_of_Expenditure_on_Agriculture_Allied_Works\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"percent_of_NRM_Expenditure\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"percentage_payments_gererated_within_15_days\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"Remarks\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

